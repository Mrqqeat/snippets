#encoding:utf-8
#==============================================================================
# ■ SProc v1.1 by Solistra
#==============================================================================

#  sproc = SES::SProc.new(%Q{ |i| (i % 3).zero? })
#  (1..10).to_a.select(&sproc) # => [3, 6, 9]

# s = SProc.new('|x, z| [x, z] ')
# p s.call 8, 55
# p s[8, 55]  # yes
# p s.parameters # yes
# ... # more

class SProc
  attr_reader :code
  #--------------------------------------------------------------------------
  # ● initialize
  #--------------------------------------------------------------------------
  def initialize(code)
    self.code = code
  end
  #--------------------------------------------------------------------------
  # ● code=
  #--------------------------------------------------------------------------
  def code=(value)
    @code = value
    refresh
  end
  #--------------------------------------------------------------------------
  # ● refresh
  #--------------------------------------------------------------------------
  def refresh
    @proc = eval("Proc.new { #{@code} }")
  end
  #--------------------------------------------------------------------------
  # ● marshal_dump
  #--------------------------------------------------------------------------
  def marshal_dump
    [@code]
  end
  #--------------------------------------------------------------------------
  # ● marshal_load
  #--------------------------------------------------------------------------
  def marshal_load(array)
    @code = array[0]
    refresh
  end
  #--------------------------------------------------------------------------
  # ● method_missing
  #--------------------------------------------------------------------------
  def method_missing(method, *args)
    @proc.send(method, *args)
  end
end
